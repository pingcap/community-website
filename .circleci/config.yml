version: 2.1

workflows:
  commit:
    jobs:
      - build:
          context:
            - enable-set-commits
          filters:
            branches:
              only:
                - main

  build:
    triggers:
      - schedule:
          cron: '0 * * * *'
          filters:
            branches:
              only:
                - main
    jobs:
      - build:
          filters:
            branches:
              only:
                - main

  cache:
    triggers:
      - schedule:
          cron: '0 * * * *'
          filters:
            branches:
              only:
                - main
    jobs:
      - cache:
          filters:
            branches:
              only:
                - main

jobs:
  build:
    docker:
      - image: circleci/node:14.13.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
      - run: npm install
      - save_cache:
          key: v1-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          environment:
            ENABLE_SENTRY: 'true'
            SENTRY_NO_PROGRESS_BAR: '1'
          command: |
            export SENTRY_RELEASE=${SENTRY_PROJECT}@${CIRCLE_SHA1}
            npm run download && GATSBY_CPU_COUNT=1 npm run build
          no_output_timeout: 10m
      - deploy:
          name: 'Publish Website Could HK_1_HOST'
          command: |
            ssh-keyscan "${HOST_HK_1_IP}" >> ~/.ssh/known_hosts 2>/dev/null;
            npm run deploy

  cache:
    docker:
      - image: circleci/node:14.13.0
    steps:
      - checkout
      - run: sudo apt update && sudo apt install rsync
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
      - run: npm install
      - run:
          command: npm run cache
          no_output_timeout: 10m
      - save_cache:
          key: v1-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
            - public/cache
      - deploy:
          name: 'Send Cache To Could HK_1_HOST'
          command: |
            ssh-keyscan "${HOST_HK_1_IP}" >> ~/.ssh/known_hosts 2>/dev/null;
            rsync -avz -e 'ssh -p 22' public/cache/ "${HOST_JP_1_USER}@${HOST_HK_1_IP}:${DEPLOY_SHARED_PATH}/project/public/cache";
